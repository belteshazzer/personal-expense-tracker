<!DOCTYPE html>
<html lang="en">

    <style>
    body {
      font-family: 'Inter', sans-serif;
      margin: 0;
      padding: 0;
      background-color: #f5f5fa;
    }
    .container {
      padding: 20px;
      width:100%;
      margin: auto;
      background-color: #fff;
      border-radius: 12px;
      @* box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); *@
    }
    .header {
      display: flex;
      justify-content: space-between;
      align-items:start;
      margin-bottom: 20px;
    }
    .header h1 {
      font-size: 20px;
      font-weight: 600;
    }
    .tab-group {
      display: flex;
      justify-content: space-around;
      margin-bottom: 20px;
    }
    .tab-group button {
      border: none;
      padding: 10px 20px;
      border-radius: 20px;
      background-color: #f5f5fa;
      cursor: pointer;
      font-size: 14px;
      font-weight: 600;
      color: #333;
    }
    .tab-group button.active {
      background-color: orange;
      color: white;
    }

    .chart {
      height: 150px;
      background: linear-gradient(180deg, #ffdfb4, #ffe1d9);
      border-radius: 8px;
      margin-bottom: 20px;
    }
    .defaultbutton{
      background-color: rgb(179, 106, 247);
      color: white;
      border: none;
      border-radius: 8px;
      padding: 10px 20px;
      text-decoration: none;
      font-size: 16px;
      cursor: pointer;
    }
    .spend {
      display: grid;
      grid-template-columns: repeat(2, 1fr);
      @* gap: 15px; *@
      justify-content: space-around;
    }
    .spend-card {
      background-color: #f9f9fc;
      border-radius: 8px;
      padding: 15px;
      text-align: center;
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }
    .spend-card img {
      width: 40px;
      margin-bottom: 10px;
    }
    .spend-card .percentage {
      font-size: 16px;
      font-weight: 600;
      margin-bottom: 5px;
    }
    .spend-card .category {
      font-size: 12px;
      color: #666;
    }
  </style>

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Personal budget tracker</title>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
</head>
<body>
    <div class="container">
    <div class="header">
      <h1>Statistic</h1>
    </div>
    <div class="tab-group">
      <button class="active" onclick="">Day</button>
      <button onclick="">Week</button>
      <button onclick="">Month</button>
      <button onclick="">Year</button>
    </div>
    <div class="chart">
      <canvas id="chart"></canvas>
    </div>
    <div>
      <button class="defaultbutton" onclick="window.location.href='api/Expense/expenseList'">
        see all expenses
      </button>

    </div>
    <div class="spend" id="spend">
      <p>fetching category analysis ... </p>

    </div>
  </div>

  <script>
    document.addEventListener('DOMContentLoaded', async function () {
      try {
        // Fetch data from the API
        const response = await fetch('api/Statistics');
        
        // Check if the response is OK
        if (!response.ok) {
          throw new Error(`HTTP error! status: ${response.status}`);
        }

        const statistics = await response.json();
        const spend = document.getElementById('spend');
        spend.innerHTML = ''; 
        // Iterate over the statistics array
        statistics.forEach((item) => {
          const spendCard = document.createElement('div');
          spendCard.classList.add('spend-card');
          spendCard.innerHTML = `
            <img src=${item.iconLink} alt="${item.category}" />
            <div class="percentage">${parseFloat(item.percent).tofixed(2)}%</div>
            <div class="category">${item.category}</div>
          `;
          spend.appendChild(spendCard);
        });
      } catch (error) {
        console.error('Error fetching statistics:', error);
        const spend = document.getElementById('spend');
        spend.innerHTML = `<p>Failed to fetch category analysis. Please try again later.</p>`;
      }
    });

    document.addEventListener('DOMContentLoaded', async function () {
      try {
        // Fetch expenses and incomes data from API
        const expensesResponse = await fetch('api/expense/all'); 
        const incomesResponse = await fetch('api/income/all'); 

        if (!expensesResponse.ok || !incomesResponse.ok) {
          throw new Error('Failed to fetch data');
        }

        const expenses = await expensesResponse.json();
        const incomes = await incomesResponse.json();

        // Helper function to group data by date
        function groupByDate(data) {
          return data.reduce((acc, item) => {
            const date = item.date;
            acc[date] = (acc[date] || 0) + item.amount;
            return acc;
          }, {});
        }

        // Group expenses and incomes by date
        const groupedExpenses = groupByDate(expenses);
        const groupedIncomes = groupByDate(incomes);

        console.log(groupedExpenses);
        console.log(groupedIncomes);
        
        const allDates = Array.from(
          new Set([...Object.keys(groupedExpenses), ...Object.keys(groupedIncomes)])
        ).sort();

        const expenseData = allDates.map((date) => groupedExpenses[date] || 0);
        const incomeData = allDates.map((date) => groupedIncomes[date] || 0);


        console.log('Grouped Expenses:', groupedExpenses);
        console.log('Grouped Incomes:', groupedIncomes);
        console.log('All Dates:', allDates);
        console.log('Expense Data:', expenseData);
        console.log('Income Data:', incomeData);


        // Create the line chart
        const ctx = document.getElementById('chart').getContext('2d');
        new Chart(ctx, {
          type: 'line',
          data: {
            labels: allDates, // X-axis labels (dates)
            datasets: [
              {
                label: 'Expenses',
                data: expenseData, // Y-axis data for expenses
                borderColor: 'rgba(255, 99, 132, 1)',
                backgroundColor: 'rgba(255, 99, 132, 0.2)',
                fill: true,
                tension: 0.4,
              },
              {
                label: 'Incomes',
                data: incomeData, // Y-axis data for incomes
                borderColor: 'rgba(75, 192, 192, 1)',
                backgroundColor: 'rgba(75, 192, 192, 0.2)',
                fill: true,
                tension: 0.4,
              },
            ],
          },
          options: {
            responsive: true,
            plugins: {
              legend: {
                position: 'top',
              },
              tooltip: {
                mode: 'index',
                intersect: false,
              },
            },
            scales: {
              x: {
                title: {
                  display: true,
                  text: 'Date',
                },
              },
              y: {
                title: {
                  display: true,
                  text: 'Amount',
                },
                beginAtZero: true,
              },
            },
          },
        });
      } catch (error) {
        console.error('Error fetching or processing data:', error);
        const chartContainer = document.querySelector('.chart');
        chartContainer.innerHTML = `<p>Failed to load chart data. Please try again later.</p>`;
      }
    });
  </script>
</body>
</html>